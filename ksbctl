#!/usr/bin/ksh

# bring up minikube and deploy a basic install

SCRIPTNAME=$0
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH
SCRIPTDIR=$(
  cd "$(dirname $SCRIPTNAME)"
  echo $PWD
)
YAMLDIR="$SCRIPTDIR/YAML"

# start minikube if it's not already running
function startMinikube {
	if ! minikube status > /dev/null 2>&1 ;then
		echo "[INFO]Starting minikube"
		minikube start --driver docker
	fi
	minikubeIP=$(minikube ip)
}

function getPodName {
	typeset namespace=$1
	typeset name=$2
	kubectl get pods --no-headers=true -n $namespace | awk '/^'$2'/ {print $1}'
}


# wait for a pod to start
function waitPodReady {
	typeset namespace
	typeset podname
	namespace=$1
	podname=$(getPodName $namespace $2)
	echo -n "[INFO]Waiting for $namespect:$podname to be ready"
	while [[ $( kubectl get pods --no-headers=true -n $namespace "$podname" | awk -F '[ /]+' '{print $2}' ) -ne 1 ]]; do
		sleep 5
		echo -n .
	done
	echo
}

function reportSanboxInfo {
	typeset namespace=$1
	typeset dashboardPodName
	typeset dashboardPort
	typeset gatewayPort
	dashboardPodName=$(getPodName $namespace tyk-dashboard)
	dashboardPort=$(kubectl get svc -n $namespace tyk-dashboard --no-headers=true | awk -F '[:/ ]+' '{print $6}')
	gatewayPort=$(kubectl get svc -n $namespace tyk-gateway --no-headers=true | awk -F '[:/ ]+' '{print $6}')
	echo "$namespace.dashboard: http://$minikubeIP:$dashboardPort/"
	echo "$namespace.gateway:   http://$minikubeIP:$gatewayPort/"
}

function createNamespace {
	typeset namespace
	namespace=$1
	if ! kubectl get namespaces | grep -wq $namespace; then
		kubectl create ns $NAMESPACE
		echo "[INFO]Created namespace '$namespace'"
	fi
}

function applyYAML {
	typeset namespace
	typeset YAML
	typeset YAMLfile
	namespace=$1
	shift
	for YAMLfile in $*; do
		YAML="$YAML -f $YAMLDIR/$YAMLfile"
	done
	kubectl apply -n $namespace $YAML
}

# start of script
# make sure ninikube is running and populate minikubeIP, the minikubeIP address it uses
startMinikube

case $1 in 
	create)
		shift
		if [[ $# -lt 1 ]]; then
			echo "[FATAL]Must provide namespace"
			exit 1
		fi
		NAMESPACE=$1
		createNamespace $NAMESPACE
		echo "[INFO]Starting redis and mongo"
		applyYAML $NAMESPACE mongo.yaml redis.yaml
		waitPodReady $NAMESPACE redis
		waitPodReady $NAMESPACE mongo
		sleep 5
		echo "[INFO]Starting dashboard, pump and gateway"
		applyYAML $NAMESPACE tyk-dashboard.yaml tyk-gateway.yaml tyk-dashboard-svc.yaml tyk-gateway-svc.yaml
		waitPodReady $NAMESPACE tyk-dashboard
		reportSanboxInfo $NAMESPACE
		;;
	delete)
		shift
		if [[ $# -lt 1 ]]; then
			echo "[FATAL]Must provide namespace"
			exit 1
		fi
		kubectl delete namespace $*
		;;
	list)
		kubectl get namespaces
		;;
	*)
		echo "[FATAL]$1 not implemented"
		;;
esac
