#!/bin/bash

# Script to dump all the key/value pairs out of redis and formats them with jq if that seems appropriate
# handy to poke around but will alto take an arguement which is the pattern to search for
# use "api-key*" for example

PATH=/scripts:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:$PATH

PORT=""
HOST=""
while getopts :p:h: arg; do
	case $arg in
		h)
			HOST=$OPTARG
			;;
		p)
			PORT=$OPTARG
			;;
		:)
			echo "[FATAL]Option -$OPTARG requires an arguement."
			exit 1
			;;
		\?)
			echo "[FATAL]Invalid option: -$OPTARG"
			exit 1
			;;
	esac
done
if [[ -z $HOST || -z $PORT ]]; then
	echo "[FATAL]Usage $0 -p <port> -h <hostname or IP>"
	exit 1
fi
shift 4

REDIS_KEY_PATTERN="${1:-*}"
OLDIFS=$IFS
IFS="
"

for key in $(redis-cli -h $HOST -p $PORT --scan --pattern "$REDIS_KEY_PATTERN" | sort); do
  type=$(redis-cli -h $HOST -p $PORT type $key)
  ttl=$(redis-cli -h $HOST -p $PORT ttl $key)
  echo -n "$key (type:$type) (ttl:$ttl) => "
  case $type in
  list)
		echo
    redis-cli -h $HOST -p $PORT lrange $key 0 -1 | sed 's/^/  /'
    ;;
  hash)
    redis-cli -h $HOST -p $PORT hgetall $key | sed 's/^/  /'
    ;;
  set)
    redis-cli -h $HOST -p $PORT smembers $key 
    ;;
  zset)
		echo
    redis-cli -h $HOST -p $PORT zrange $key 0 -1 withscores | sed 's/^/  /'
    ;;
  string)
    if redis-cli -h $HOST -p $PORT get $key | egrep -q '^{'; then
      redis-cli -h $HOST -p $PORT get $key | jq .
    else
      redis-cli -h $HOST -p $PORT get $key
    fi
    ;;
  *)
    echo "[WARN]Unknown type $type"
    redis-cli -h $HOST -p $PORT get $key
    ;;
  esac
done
