#!/bin/bash

# Script to dump all the key/value pairs out of redis and formats them with jq if that seems appropriate
# handy to poke around but will alto take an arguement which is the pattern to search for
# use "api-key*" for example

PATH=/scripts:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:$PATH

PORT=6379
REDIS_KEY_PATTERN="${1:-*}"
OLDIFS=$IFS
#IFS="
#"
function dumpRedis {
  typeset REDIS_KEY_PATTERN
  REDIS_KEY_PATTERN="$1"
  for key in $(redis-cli -p $PORT --scan --pattern "$REDIS_KEY_PATTERN" | sort); do
    type=$(redis-cli -p $PORT type $key)
    ttl=$(redis-cli -p $PORT ttl $key)
    echo -n "$key (type:$type) (ttl:$ttl) => "
    case $type in
    list)
      echo
      redis-cli -p $PORT lrange $key 0 -1 | sed 's/^/  /'
      ;;
    hash)
      redis-cli -p $PORT hgetall $key | sed 's/^/  /'
      ;;
    set)
      redis-cli -p $PORT smembers $key 
      ;;
    zset)
      echo
      redis-cli -p $PORT zrange $key 0 -1 withscores | sed 's/^/  /'
      ;;
    string)
      if redis-cli -p $PORT get $key | egrep -q '^{'; then
        redis-cli -p $PORT get $key | jq .
      else
        redis-cli -p $PORT get $key
      fi
      ;;
    *)
      echo "[WARN]Unknown type $type"
      redis-cli -p $PORT get $key
      ;;
    esac
  done
}

if [[ $# -lt 1 ]]; then
  dumpRedis '*'
else
  for pattern in "$@"; do
    dumpRedis "$pattern"
  done
fi
