apiVersion: apps/v1
kind: Deployment
metadata:
  name: tyk-pump
  labels:
    app: tyk-pump
    plane: control
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tyk-pump
      plane: control
  template:
    metadata:
      labels:
        app: tyk-pump
        plane: control
      annotations:
    spec:
      containers:
      - image: tykio/tyk-pump-docker-pub:$KSBX_PUMP_VERS
        imagePullPolicy: IfNotPresent
        name: tyk-pump
        securityContext:
          runAsNonRoot: false
          allowPrivilegeEscalation: true
          privileged: true
        env:
          - name: TYK_LOGLEVEL
            value: "${KSBX_LOG_LEVEL}"
        command: ["/opt/tyk-pump/tyk-pump", "--conf=/etc/tyk-pump/pump.conf"]
        workingDir: /opt/tyk-pump
        ports:
        - containerPort: 8083
        volumeMounts:
          - name: tyk-pump-conf
            mountPath: /etc/tyk-pump
        livenessProbe:
          httpGet:
            scheme: "HTTP"
            path: /health
            port: 8083
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP"
            path: /health
            port: 8083
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
        - name: tyk-pump-conf
          configMap:
            name: tyk-pump-conf
            items:
              - key: pump.conf
                path: pump.conf
