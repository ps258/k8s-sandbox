apiVersion: apps/v1
kind: Deployment
metadata:
  name: tyk-dashboard
  labels:
    app: tyk-dashboard
    plane: control
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tyk-dashboard
      plane: control
  template:
    metadata:
      labels:
        app: tyk-dashboard
        plane: control
      annotations:
    spec:
      containers:
      - image: tykio/tyk-dashboard:$KSBX_DASH_VERS
        imagePullPolicy: IfNotPresent
        name: tyk-dashboard
        securityContext:
          runAsNonRoot: false
          allowPrivilegeEscalation: true
          privileged: true
        env:
          - name: TYK_LOGLEVEL
            value: "${KSBX_LOG_LEVEL}"              
        command: ["/opt/tyk-dashboard/tyk-analytics", "--conf=/etc/tyk-dashboard/tyk_analytics.conf", "--pprof"]
        workingDir: /opt/tyk-dashboard
        ports:
        - containerPort: 3000
        volumeMounts:
          - name: tyk-dashboard-conf
            mountPath: /etc/tyk-dashboard
        livenessProbe:
          httpGet:
            scheme: "HTTP"
            path: /
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP"
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
        - name: tyk-dashboard-conf
          configMap:
            name: tyk-dashboard-conf
            items:
              - key: tyk_analytics.conf
                path: tyk_analytics.conf
