apiVersion: v1
kind: ConfigMap
metadata:
  name: tyk-pump-conf
  labels:
    app: tyk-pump
data:
  pump.conf: |-
    {
      "analytics_storage_type": "redis",
      "analytics_storage_config": { 
        "type": "redis",
        "host": "redis-db",
        "port": 6379,
        "hosts": null,
        "username": "",
        "password": "",
        "database": 0,
        "optimisation_max_idle": 10,
        "optimisation_max_active": 10,
        "enable_cluster": false
      },
      "purge_delay": 2,
      "pumps": { 
        "mongo": { 
          "type": "mongo",
          "meta": { 
            "collection_name": "tyk_analytics",
            "mongo_url": "mongodb://mongo-db/tyk_analytics",
            "collection_cap_enable": true,
            "collection_cap_max_size_bytes": 1048576,
            "max_insert_batch_size_bytes": 80000,
            "max_document_size_bytes": 20112
          }
        },
        "mongo-pump-aggregate": { 
          "type": "mongo-pump-aggregate",
          "meta": { 
            "mongo_url": "mongodb://mongo-db/tyk_analytics",
            "track_all_paths": true,
            "use_mixed_collection": true
          }
        }
      },
      "uptime_pump_config": { 
        "collection_name": "tyk_uptime_analytics",
        "mongo_url": "mongodb://mongo-db/tyk_analytics",
        "collection_cap_enable": true,
        "collection_cap_max_size_bytes": 1048576,
        "max_insert_batch_size_bytes": 500000,
        "max_document_size_bytes": 200000
      },
      "dont_purge_uptime_data": false,
      "health_check_endpoint_port": 8083
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tyk-pump
  labels:
    app: tyk-pump
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tyk-pump
  template:
    metadata:
      labels:
        app: tyk-pump
      annotations:
    spec:
      containers:
      - image: tykio/tyk-pump-docker-pub:$KSBX_PUMP_VERS
        imagePullPolicy: IfNotPresent
        name: tyk-pump
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
            drop:
              - all
        env:
          - name: TYK_LOGLEVEL
            value: "debug"
        command: ["/opt/tyk-pump/tyk-pump", "--conf=/etc/tyk-pump/pump.conf"]
        workingDir: /opt/tyk-pump
        ports:
        - containerPort: 8080
        volumeMounts:
          - name: tyk-pump-conf
            mountPath: /etc/tyk-pump
        livenessProbe:
          httpGet:
            scheme: "HTTP"
            path: /health
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP"
            path: /health
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        - name: tyk-pump-conf
          configMap:
            name: tyk-pump-conf
            items:
              - key: pump.conf
                path: pump.conf
