#!/bin/bash

# script to delete all ApiDefinition and OperatorContexts from a namespace.

PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH

if [[ $# -lt 1 ]]; then
	echo "[FATAL]Must provide namespace"
	exit 1
fi

typeset API
typeset OC
for NAMESPACE in $*; do
  # delete Portal Catalogues
	for PAC in $(kubectl get portalapicatalogues -n $NAMESPACE --no-headers=true 2>&- | awk '{print $1}'); do
		kubectl get portalapicatalogues $PAC -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers[])' | kubectl apply -f -
		kubectl get portalapicatalogues $PAC -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers)' | kubectl apply -f -
	done
  sleep 1
  # delete API descriptions
	for AD in $(kubectl get apidescription -n $NAMESPACE --no-headers=true 2>&- | awk '{print $1}'); do
		kubectl get apidescription $AD -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers[])' | kubectl apply -f -
		kubectl get apidescription $AD -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers)' | kubectl apply -f -
	done
  sleep 1
  # delete Policies
	for SP in $(kubectl get securitypolicies -n $NAMESPACE --no-headers=true 2>&- | awk '{print $1}'); do
		kubectl get securitypolicies $SP -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers[])' | kubectl apply -f -
		kubectl get securitypolicies $SP -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers)' | kubectl apply -f -
	done
  sleep 1
  # delete API descriptions
	for AD in $(kubectl get apidescription -n $NAMESPACE --no-headers=true 2>&- | awk '{print $1}'); do
		kubectl get apidescription $AD -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers[])' | kubectl apply -f -
		kubectl get apidescription $AD -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers)' | kubectl apply -f -
	done
  sleep 1
	# delete API definitions
	echo "[INFO]Deleting ApiDefinitions from $NAMESPACE"
	for API in $(kubectl get ApiDefinition -n $NAMESPACE --no-headers=true 2>&- | awk '{print $1}'); do
		kubectl get ApiDefinition $API -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers[])' | kubectl apply -f -
		kubectl get ApiDefinition $API -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers)' | kubectl apply -f -
	done
	sleep 1

	kubectl delete portalapicatalogues --all -n $NAMESPACE
	kubectl delete apidescription --all -n $NAMESPACE
	kubectl delete securitypolicies --all -n $NAMESPACE
	kubectl delete ApiDefinition --all -n $NAMESPACE

	# delete OperatorContext finalizer since it can hang too
	for OC in $(kubectl get OperatorContext -n $NAMESPACE --no-headers=true 2>&- | awk '{print $1}'); do
		kubectl get OperatorContext $OC -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers[])' | kubectl apply -f -
		kubectl get OperatorContext $OC -n $NAMESPACE -o yaml | yq 'del(.metadata.finalizers)' | kubectl apply -f -
	done
  sleep 1
	kubectl delete OperatorContext --all -n $NAMESPACE

	# now check results
  for CRD in portalapicatalogues apidescription securitypolicies ApiDefinition; do
	  echo "[INFO]Checking $CRD from $NAMESPACE to see if the finalizer is gone"
	  for item in $(kubectl get $CRD -n $NAMESPACE --no-headers=true | awk '{print $1}'); do
		  echo $item $(kubectl get $CRD $item -n $NAMESPACE -o yaml | yq .metadata.finalizers)
	  done
	done
done
